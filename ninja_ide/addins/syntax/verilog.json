{
  "comment": [
    "//"
  ],
  "multiline_comment": {
    "open": "/*",
    "close": "*/"
  },
  "extension": [
    "v"
  ],
  "string": [
    "\""
  ],
  "extras": [
  "`celldefine",
  "`default_nettype",
  "`define",
  "`else",
  "`elsif",
  "`endcelldefine",
  "`endif",
  "`ifdef",
  "`ifndef",
  "`include",
  "`line",
  "`nounconnected_drive",
  "`resetall",
  "`timescale",
  "`unconnected_drive",
  "`undef"
  ],
  "keywords": [
  "always",
  "and",
  "assign",
  "automatic",
  "buf",
  "bufif0",
  "bufif1",
  "cell",
  "cmos",
  "config",
  "deassign",
  "defparam",
  "design",
  "disable",
  "edge",
  "endconfig",
  "endfunction",
  "endgenerate",
  "endmodule",
  "endprimitive",
  "endspecify",
  "endtable",
  "endtask",
  "event",
  "force",
  "function",
  "generate",
  "genvar",
  "highz0",
  "highz1",
  "ifnone",
  "incdir",
  "include",
  "initial",
  "inout",
  "input",
  "instance",
  "integer",
  "large",
  "liblist",
  "library",
  "localparam",
  "macromodule",
  "medium",
  "module",
  "nand",
  "negedge",
  "nmos",
  "nor",
  "noshowcancelled",
  "not",
  "notif0",
  "notif1",
  "or",
  "output",
  "parameter",
  "pmos",
  "posedge",
  "primitive",
  "pull0",
  "pull1",
  "pulldown",
  "pullup",
  "pulsestyle_onevent",
  "pulsestyle_ondetect",
  "rcmos",
  "real",
  "realtime",
  "reg",
  "release",
  "rnmos",
  "rpmos",
  "rtran",
  "rtranif0",
  "rtranif1",
  "scalared",
  "showcancelled",
  "signed",
  "small",
  "specify",
  "specparam",
  "strong0",
  "strong1",
  "supply0",
  "supply1",
  "table",
  "task",
  "time",
  "tran",
  "tranif0",
  "tranif1",
  "tri",
  "tri0",
  "tri1",
  "triand",
  "trior",
  "trireg",
  "unsigned",
  "use",
  "vectored",
  "wait",
  "wand",
  "weak0",
  "weak1",
  "wire",
  "wor",
  "xnor",
  "xor",
  "begin",
  "end",
  "fork",
  "join",
  "if",
  "else",
  "case",
  "casex",
  "casez",
  "default",
  "endcase",
  "forever",
  "repeat",
  "while",
  "for"
  ],
  "operators": [
    "=",
    "==",
    "!=",
    "<",
    "<=",
    ">",
    ">=",
    "\\+",
    "-",
    "\\*",
    "/",
    "//",
    "\\%",
    "\\*\\*",
    "\\+=",
    "-=",
    "\\*=",
    "/=",
    "\\%=",
    "!",
    "\\^",
    "\\|",
    "\\&",
    "\\~",
    ">>",
    "<<"
   ],
  "regex":[
  ["\\$[a-zA-Z0-9_]+", "extras", "bold"],
  ["[0-9]+\\'[A-Za-z][A-Za-z0-9_]+", "defines", "bold"],
  ["`\\w+", "defines", "bold"]
  ]

}

